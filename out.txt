diff --git a/.idea/.gitignore b/.idea/.gitignore
new file mode 100644
index 0000000..26d3352
--- /dev/null
+++ b/.idea/.gitignore
@@ -0,0 +1,3 @@
+# Default ignored files
+/shelf/
+/workspace.xml
diff --git a/.idea/deploymentTargetDropDown.xml b/.idea/deploymentTargetDropDown.xml
index d5d23c5..3273459 100644
--- a/.idea/deploymentTargetDropDown.xml
+++ b/.idea/deploymentTargetDropDown.xml
@@ -12,6 +12,6 @@
         </deviceKey>
       </Target>
     </targetSelectedWithDropDown>
-    <timeTargetWasSelectedWithDropDown value="2022-06-24T19:23:44.644155400Z" />
+    <timeTargetWasSelectedWithDropDown value="2022-07-05T16:01:50.280868600Z" />
   </component>
 </project>
\ No newline at end of file
diff --git a/.idea/gradle.xml b/.idea/gradle.xml
index a9f4e52..a2d7c21 100644
--- a/.idea/gradle.xml
+++ b/.idea/gradle.xml
@@ -1,5 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
+  <component name="GradleMigrationSettings" migrationVersion="1" />
   <component name="GradleSettings">
     <option name="linkedExternalProjectsSettings">
       <GradleProjectSettings>
diff --git a/.idea/misc.xml b/.idea/misc.xml
index 16f65a6..6ffdcc3 100644
--- a/.idea/misc.xml
+++ b/.idea/misc.xml
@@ -3,17 +3,20 @@
   <component name="DesignSurface">
     <option name="filePathToZoomLevelMap">
       <map>
-        <entry key="..\:/Users/stacypopova123/AndroidStudioProjects/RecipeApp/app/src/main/res/layout/activity_details.xml" value="0.1933876811594203" />
-<<<<<<< HEAD
-<<<<<<< HEAD
-        <entry key="..\:/Users/stacypopova123/AndroidStudioProjects/RecipeApp/app/src/main/res/layout/activity_login.xml" value="0.3578125" />
-        <entry key="..\:/Users/stacypopova123/AndroidStudioProjects/RecipeApp/app/src/main/res/layout/activity_main.xml" value="0.3578125" />
-        <entry key="..\:/Users/stacypopova123/AndroidStudioProjects/RecipeApp/app/src/main/res/layout/activity_reviews.xml" value="0.2630208333333333" />
+        <entry key="..\:/Users/stacypopova123/AndroidStudioProjects/RecipeApp/app/src/main/res/drawable-v24/item_background.xml" value="0.1965" />
+        <entry key="..\:/Users/stacypopova123/AndroidStudioProjects/RecipeApp/app/src/main/res/drawable/bottom_border.xml" value="0.316" />
+        <entry key="..\:/Users/stacypopova123/AndroidStudioProjects/RecipeApp/app/src/main/res/drawable/fab_back.xml" value="0.3225" />
+        <entry key="..\:/Users/stacypopova123/AndroidStudioProjects/RecipeApp/app/src/main/res/drawable/heart.xml" value="0.321" />
+        <entry key="..\:/Users/stacypopova123/AndroidStudioProjects/RecipeApp/app/src/main/res/drawable/heart_selector.xml" value="0.321" />
+        <entry key="..\:/Users/stacypopova123/AndroidStudioProjects/RecipeApp/app/src/main/res/drawable/ingr_back.xml" value="0.316" />
+        <entry key="..\:/Users/stacypopova123/AndroidStudioProjects/RecipeApp/app/src/main/res/drawable/round_back.xml" value="0.267" />
+        <entry key="..\:/Users/stacypopova123/AndroidStudioProjects/RecipeApp/app/src/main/res/drawable/stroke_square.xml" value="0.316" />
+        <entry key="..\:/Users/stacypopova123/AndroidStudioProjects/RecipeApp/app/src/main/res/drawable/transparent_rectangle.xml" value="0.316" />
+        <entry key="..\:/Users/stacypopova123/AndroidStudioProjects/RecipeApp/app/src/main/res/layout/activity_details.xml" value="0.25" />
+        <entry key="..\:/Users/stacypopova123/AndroidStudioProjects/RecipeApp/app/src/main/res/layout/activity_ingridients.xml" value="0.3140625" />
+        <entry key="..\:/Users/stacypopova123/AndroidStudioProjects/RecipeApp/app/src/main/res/layout/activity_login.xml" value="0.3140625" />
+        <entry key="..\:/Users/stacypopova123/AndroidStudioProjects/RecipeApp/app/src/main/res/layout/activity_main.xml" value="0.3" />
         <entry key="..\:/Users/stacypopova123/AndroidStudioProjects/RecipeApp/app/src/main/res/layout/activity_sign_up.xml" value="0.3140625" />
-        <entry key="..\:/Users/stacypopova123/AndroidStudioProjects/RecipeApp/app/src/main/res/layout/fragment_biography.xml" value="0.3140625" />
-        <entry key="..\:/Users/stacypopova123/AndroidStudioProjects/RecipeApp/app/src/main/res/layout/item.xml" value="0.3140625" />
-        <entry key="..\:/Users/stacypopova123/AndroidStudioProjects/RecipeApp/app/src/main/res/layout/item_list.xml" value="0.3140625" />
-        <entry key="..\:/Users/stacypopova123/AndroidStudioProjects/RecipeApp/app/src/main/res/layout/review_item.xml" value="0.3578125" />
         <entry key="..\:/Users/stacypopova123/AndroidStudioProjects/RecipeApp/app/src/main/res/layout/fragment_feed.xml" value="0.3140625" />
         <entry key="..\:/Users/stacypopova123/AndroidStudioProjects/RecipeApp/app/src/main/res/layout/fragment_search.xml" value="0.4466666666666667" />
         <entry key="..\:/Users/stacypopova123/AndroidStudioProjects/RecipeApp/app/src/main/res/layout/interactions.xml" value="0.49230072463768115" />
@@ -26,16 +29,6 @@
         <entry key="..\:/Users/stacypopova123/AndroidStudioProjects/RecipeApp/app/src/main/res/menu/menu_bottom_navigation.xml" value="0.31302083333333336" />
         <entry key="..\:/Users/stacypopova123/AndroidStudioProjects/RecipeApp/app/src/main/res/menu/menu_main.xml" value="0.3171875" />
         <entry key="..\:/Users/stacypopova123/AndroidStudioProjects/RecipeApp/app/src/main/res/xml/attrs.xml" value="0.32083333333333336" />
-        <entry key="..\:/Users/stacypopova123/AndroidStudioProjects/RecipeApp/app/src/main/res/layout/fragment_biography.xml" value="0.3140625" />
-        <entry key="..\:/Users/stacypopova123/AndroidStudioProjects/RecipeApp/app/src/main/res/layout/item.xml" value="0.3140625" />
-        <entry key="..\:/Users/stacypopova123/AndroidStudioProjects/RecipeApp/app/src/main/res/layout/item_list.xml" value="0.3140625" />
-        <entry key="..\:/Users/stacypopova123/AndroidStudioProjects/RecipeApp/app/src/main/res/layout/review_item.xml" value="0.3578125" />
-=======
->>>>>>> 6d2c3b6... details activity moved to a viewmodel, except for a recyclerview
-=======
-        <entry key="..\:/Users/stacypopova123/AndroidStudioProjects/RecipeApp/app/src/main/res/layout/item.xml" value="0.3140625" />
-        <entry key="..\:/Users/stacypopova123/AndroidStudioProjects/RecipeApp/app/src/main/res/layout/item_list.xml" value="0.3140625" />
->>>>>>> 3f3153c... steps moved to a recycler view
       </map>
     </option>
   </component>
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
index 35eb1dd..94a25f7 100644
--- a/.idea/vcs.xml
+++ b/.idea/vcs.xml
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="VcsDirectoryMappings">
-    <mapping directory="" vcs="Git" />
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
   </component>
 </project>
\ No newline at end of file
diff --git a/README.md b/README.md
index 7743a67..9036ad8 100644
--- a/README.md
+++ b/README.md
@@ -164,8 +164,3 @@ Base uri https://spoonacular.com/
 | HTTP VERB | Endpoint | Desciprtion|
 |----------|------|------------|
 | GET | complex-search | search |
-| GET | /recipes/{id}/information | Detailed informtaions about recipes |
-| GET | /food/ingredients/autocomplete | Autocomplete for ingredients search |
-| GET | /recipes/autocomplete | Autocomplete for recipe title search |
-| GET | /food/ingredients/{id}/substitutes | Get ingredient substitues by id |
-| GET | /recipes/{id}/tasteWidget.json | get taste components |
diff --git a/app/build.gradle b/app/build.gradle
index b77061d..1a3f622 100644
--- a/app/build.gradle
+++ b/app/build.gradle
@@ -45,6 +45,9 @@ android {
 }
 
 dependencies {
+    implementation "androidx.room:room-runtime:2.4.2"
+    annotationProcessor "androidx.room:room-compiler:2.4.2"
+
     implementation 'com.roughike:swipe-selector:1.0.6'
     implementation 'android.arch.lifecycle:extensions:1.1.1'
     implementation 'com.codepath.libraries:asynchttpclient:2.2.0'
@@ -69,17 +72,4 @@ dependencies {
     implementation 'com.squareup.retrofit2:retrofit:2.9.0'
     implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
     implementation 'com.jakewharton.picasso:picasso2-okhttp3-downloader:1.1.0'
-
-    implementation 'com.google.auto.value:auto-value:1.5.2'
-    annotationProcessor 'com.google.auto.value:auto-value:1.5.2'
-
-    implementation 'com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava'
-    annotationProcessor("com.ryanharter.auto.value:auto-value-gson-extension:1.3.1")
-    implementation("com.ryanharter.auto.value:auto-value-gson-runtime:1.3.1")
-
-// Optional @GsonTypeAdapterFactory support
-    annotationProcessor("com.ryanharter.auto.value:auto-value-gson-factory:1.3.1")
-
-    annotationProcessor 'com.ryanharter.auto.value:auto-value-parcel:0.2.9'
-    implementation 'com.ryanharter.auto.value:auto-value-parcel-adapter:0.2.9'
 }
\ No newline at end of file
diff --git a/app/src/main/java/com/example/recipeapp/Adapters/IngredientFilterAdapter.java b/app/src/main/java/com/example/recipeapp/Adapters/IngredientFilterAdapter.java
deleted file mode 100644
index 475d158..0000000
--- a/app/src/main/java/com/example/recipeapp/Adapters/IngredientFilterAdapter.java
+++ /dev/null
@@ -1,72 +0,0 @@
-package com.example.recipeapp.Adapters;
-
-
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.TextView;
-
-import androidx.annotation.NonNull;
-import androidx.constraintlayout.widget.ConstraintLayout;
-import androidx.recyclerview.widget.RecyclerView;
-
-import com.example.recipeapp.R;
-
-import java.util.List;
-
-public class IngredientFilterAdapter extends RecyclerView.Adapter<IngredientFilterAdapter.IngredientFilterViewHolder> {
-
-    List<String> items;
-    int layoutId = R.layout.item;
-
-    @NonNull
-    @Override
-    public IngredientFilterViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
-
-        View todoView = LayoutInflater.from(parent.getContext()).inflate(layoutId, parent, false);
-        return new IngredientFilterViewHolder(todoView);
-    }
-
-    public IngredientFilterAdapter(List<String> items, int layoutId)
-    {
-        this.items = items;
-        this.layoutId = layoutId;
-    }
-
-    @Override
-    public void onBindViewHolder(@NonNull IngredientFilterViewHolder holder, int position) {
-        String item = items.get(position);
-        holder.bind(item);
-    }
-
-    @Override
-    public int getItemCount() {
-        return items.size();
-    }
-
-
-    // General ViewHolder used to display simple string lists, for example, in autocomplete
-    class IngredientFilterViewHolder extends RecyclerView.ViewHolder{
-
-        TextView tvText;
-        ConstraintLayout layout;
-
-        public IngredientFilterViewHolder(@NonNull View itemView) {
-            super(itemView);
-            tvText = itemView.findViewById(R.id.text);
-            layout = itemView.findViewById(R.id.layout);
-        }
-
-        public void bind(String item) {
-            tvText.setText(item);
-            layout.setOnClickListener(new View.OnClickListener() {
-                @Override
-                public void onClick(View v) {
-                    int i = getAdapterPosition();
-                    items.remove(i);
-                    notifyItemRemoved(i);
-                }
-            });
-        }
-    }
-}
diff --git a/app/src/main/java/com/example/recipeapp/Adapters/IngredientsAdapter.java b/app/src/main/java/com/example/recipeapp/Adapters/IngredientsAdapter.java
index 13c16a4..ba5d84c 100644
--- a/app/src/main/java/com/example/recipeapp/Adapters/IngredientsAdapter.java
+++ b/app/src/main/java/com/example/recipeapp/Adapters/IngredientsAdapter.java
@@ -79,9 +79,11 @@ public class IngredientsAdapter extends RecyclerView.Adapter<IngredientsAdapter.
 
                 @Override
                 public void onFailure(Call<SubEnvelope<List<String>>> call, Throwable t) {
+                    binding.swipeSelector.setItems(new SwipeItem(0, s.getName(), s.getName()));
                     Log.i(TAG, "Couldn't retrieve substitutes");
                 }
             });
+
         }
     }
 }
diff --git a/app/src/main/java/com/example/recipeapp/Adapters/StepsAdapter.java b/app/src/main/java/com/example/recipeapp/Adapters/StepsAdapter.java
index d1cf0c1..5796f6a 100644
--- a/app/src/main/java/com/example/recipeapp/Adapters/StepsAdapter.java
+++ b/app/src/main/java/com/example/recipeapp/Adapters/StepsAdapter.java
@@ -1,62 +1,72 @@
 package com.example.recipeapp.Adapters;
 
+
 import android.view.LayoutInflater;
+import android.view.View;
 import android.view.ViewGroup;
+import android.widget.TextView;
 
 import androidx.annotation.NonNull;
-import androidx.databinding.DataBindingUtil;
-import androidx.databinding.ViewDataBinding;
-import androidx.lifecycle.MutableLiveData;
+import androidx.constraintlayout.widget.ConstraintLayout;
 import androidx.recyclerview.widget.RecyclerView;
 
-import com.example.recipeapp.BR;
 import com.example.recipeapp.R;
-import com.example.recipeapp.viewmodels.StepViewModel;
 
-import java.util.ArrayList;
 import java.util.List;
 
-public class StepsAdapter extends RecyclerView.Adapter<StepsAdapter.BindableViewHolder>{
-    private List<StepViewModel> data = new ArrayList<>();
+public class StepsAdapter extends RecyclerView.Adapter<StepsAdapter.StepsViewHolder> {
+
+    List<String> items;
+    int layoutId = R.layout.item;
 
     @NonNull
     @Override
-    public BindableViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
-        ViewDataBinding binding = DataBindingUtil.inflate(
-                LayoutInflater.from(parent.getContext()),
-                R.layout.item_list,
-                parent,
-                false
-        );
-        return new BindableViewHolder(binding);
+    public StepsViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
+
+        View todoView = LayoutInflater.from(parent.getContext()).inflate(layoutId, parent, false);
+        return new StepsViewHolder(todoView);
     }
 
-    @Override
-    public void onBindViewHolder(@NonNull BindableViewHolder holder, int position) {
-        holder.bind(data.get(position));
+    public StepsAdapter(List<String> items, int layoutId)
+    {
+        this.items = items;
+        this.layoutId = layoutId;
     }
 
-    public void updateItems(List<StepViewModel> items) {
-        data.addAll(items);
-        notifyDataSetChanged();
+    @Override
+    public void onBindViewHolder(@NonNull StepsViewHolder holder, int position) {
+        String item = items.get(position);
+        holder.bind(item);
     }
 
     @Override
     public int getItemCount() {
-        return data.size();
+        return items.size();
     }
 
-    public class BindableViewHolder extends RecyclerView.ViewHolder {
 
-        private ViewDataBinding binding;
+    // General ViewHolder used to display simple string lists, for example, in autocomplete
+    class StepsViewHolder extends RecyclerView.ViewHolder{
+
+        TextView tvText;
+        ConstraintLayout layout;
 
-        public BindableViewHolder(@NonNull ViewDataBinding binding) {
-            super(binding.getRoot());
-            this.binding = binding;
+        public StepsViewHolder(@NonNull View itemView) {
+            super(itemView);
+            tvText = itemView.findViewById(R.id.text);
+            layout = itemView.findViewById(R.id.layout);
         }
 
-        public void bind(StepViewModel item) {
-            binding.setVariable(BR.itemViewModel, item);
+        public void bind(String item) {
+            tvText.setText(item);
+            layout.setOnClickListener(new View.OnClickListener() {
+                @Override
+                public void onClick(View v) {
+                    int i = getAdapterPosition();
+                    items.remove(i);
+                    notifyItemRemoved(i);
+                }
+            });
         }
     }
 }
diff --git a/app/src/main/java/com/example/recipeapp/DetailsActivity.java b/app/src/main/java/com/example/recipeapp/DetailsActivity.java
index a02c08e..9650ccb 100644
--- a/app/src/main/java/com/example/recipeapp/DetailsActivity.java
+++ b/app/src/main/java/com/example/recipeapp/DetailsActivity.java
@@ -1,32 +1,34 @@
 package com.example.recipeapp;
 
+import androidx.appcompat.app.AppCompatActivity;
+import androidx.recyclerview.widget.LinearLayoutManager;
+
 import android.content.Intent;
 import android.os.Bundle;
+import android.os.Handler;
+import android.os.Looper;
 import android.util.Log;
 import android.view.View;
 import android.widget.Toast;
 
-import androidx.appcompat.app.AppCompatActivity;
-import androidx.databinding.DataBindingUtil;
-import androidx.lifecycle.Observer;
-
-import com.example.recipeapp.Adapters.IngredientFilterAdapter;
-import com.example.recipeapp.Models.Ingredient;
+import com.bumptech.glide.Glide;
+import com.example.recipeapp.Adapters.StepsAdapter;
 import com.example.recipeapp.Models.Parse.Preferences;
 import com.example.recipeapp.Models.Parse.Taste;
 import com.example.recipeapp.Models.Recipe;
 import com.example.recipeapp.Models.API.Step;
 import com.example.recipeapp.Retrofit.RecipeApi;
 import com.example.recipeapp.Retrofit.RetrofitClientInstance;
+import com.example.recipeapp.Room.RecipeDatabase;
 import com.example.recipeapp.databinding.ActivityDetailsBinding;
 import com.parse.ParseUser;
-import com.example.recipeapp.databinding.ActivityDetailsBinding;
-import com.example.recipeapp.viewmodels.DetailsViewModel;
 
 import org.parceler.Parcels;
 
 import java.util.ArrayList;
 import java.util.List;
+import java.util.concurrent.ExecutorService;
+import java.util.concurrent.Executors;
 
 import retrofit2.Call;
 import retrofit2.Callback;
@@ -36,23 +38,109 @@ public class DetailsActivity extends AppCompatActivity {
 
     private static final String TAG = "DETAILS ACTIVITY";
     ActivityDetailsBinding binding;
+    Recipe recipe;
+    List<String> steps = new ArrayList<>();
     public static final String RECIPE = "recipe";
-    public static final String INGREDIENTS = "ingredients";
 
-    DetailsViewModel viewModel;
+    StepsAdapter stepsAdapter;
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
-        binding = DataBindingUtil.setContentView(this, R.layout.activity_details);
-        Recipe recipe = Parcels.unwrap(getIntent().getParcelableExtra(RECIPE));
-        viewModel = new DetailsViewModel(recipe);
-        binding.setViewModel(viewModel);
-
-        viewModel.showIngredients.observe(this, ingredients -> {
-            Intent i = new Intent(DetailsActivity.this, IngredientsActivity.class);
-            i.putExtra(DetailsActivity.INGREDIENTS, Parcels.wrap(ingredients));
-            startActivity(i);
+        binding = ActivityDetailsBinding.inflate(getLayoutInflater());
+        setContentView(binding.getRoot());
+
+        recipe = Parcels.unwrap(getIntent().getParcelableExtra(RECIPE));
+
+        Glide.with(this).load(recipe.getImage()).into(binding.ivImage);
+        binding.tvServings.setText(String.format("%s\nservings", recipe.getServings().toString()));
+        binding.tvTime.setText(String.format("%s minutes", recipe.getTimeToCook().toString()));
+        binding.rvSteps.setLayoutManager(new LinearLayoutManager(this));
+
+
+        stepsAdapter = new StepsAdapter(steps, R.layout.item_list);
+        binding.rvSteps.setAdapter(stepsAdapter);
+
+        if(recipe.getAnalyzedInstructions() == null || recipe.getIngredients() == null) {
+            RecipeApi service = RetrofitClientInstance.getRetrofitInstance().create(RecipeApi.class);
+            Call<Recipe> recipeById = service.getRecipeById(recipe.getId(), BuildConfig.API_KEY);
+            recipeById.enqueue(new Callback<Recipe>() {
+                @Override
+                public void onResponse(Call<Recipe> call, Response<Recipe> response) {
+                    recipe.setAnalyzedInstructions(response.body().getAnalyzedInstructions());
+                    recipe.setIngredients(response.body().getIngredients());
+                    setDetails();
+                }
+
+                @Override
+                public void onFailure(Call<Recipe> call, Throwable t) {
+                    Log.e(TAG, "Something went wrong: " + t);
+                }
+            });
+        } else {
+            setDetails();
+        }
+
+        binding.btnIngredients.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                Intent i = new Intent(DetailsActivity.this, IngredientsActivity.class);
+                i.putExtra(DetailsActivity.RECIPE, Parcels.wrap(recipe));
+                startActivity(i);
+            }
+        });
+
+        binding.btnIngredients.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                Intent i = new Intent(DetailsActivity.this, IngredientsActivity.class);
+                i.putExtra(IngredientsActivity.RECIPE, Parcels.wrap(recipe));
+                startActivity(i);
+            }
+        });
+
+        binding.options.bookmark.setOnClickListener(this::onBookmark);
+        binding.options.like.setOnClickListener(this::onLike);
+    }
+
+    private void setDetails() {
+        for (Step item : recipe.getAnalyzedInstructions()) {
+            steps.add(item.number + ". " + item.step);
+        }
+        stepsAdapter.notifyItemRangeChanged(0, steps.size());
+        Log.e(TAG, "Something went wrong: recipes loaded");
+    }
+
+    private void onLike(View v) {
+        Toast.makeText(DetailsActivity.this, R.string.liked, Toast.LENGTH_SHORT).show();
+        recipe.getTaste(new Callback<Taste>() {
+            @Override
+            public void onResponse(Call<Taste> call, Response<Taste> response) {
+                Preferences preferences = (Preferences) ParseUser.getCurrentUser().getParseObject(Preferences.PREFERENCES);
+                preferences.updatePreferences(recipe, response.body());
+                preferences.saveInBackground();
+            }
+
+            @Override
+            public void onFailure(Call<Taste> call, Throwable t) {
+                Log.e(TAG, "Failure : " + t);
+            }
+        });
+    }
+
+    private void onBookmark(View v) {
+        ExecutorService executor = Executors.newSingleThreadExecutor();
+        Handler handler = new Handler(Looper.getMainLooper());
+        executor.execute(() -> {
+            RecipeDatabase recipeDatabase = ((ParseApplication) getApplication()).getRecipeDatabase();
+            recipe.isBookmarked = !recipe.isBookmarked;
+            if (recipe.isBookmarked) {
+                recipeDatabase.runInTransaction(() -> recipeDatabase.recipeDao().insertRecipe(recipe));
+                handler.post(() -> Toast.makeText(DetailsActivity.this, R.string.recipe_bookmarked, Toast.LENGTH_SHORT).show());
+            } else {
+                recipeDatabase.runInTransaction(() -> recipeDatabase.recipeDao().delete(recipe));
+                handler.post(() -> Toast.makeText(DetailsActivity.this, R.string.recipe_unbookmarked, Toast.LENGTH_SHORT).show());
+            }
         });
     }
 }
\ No newline at end of file
diff --git a/app/src/main/java/com/example/recipeapp/Fragments/FeedFragment.java b/app/src/main/java/com/example/recipeapp/Fragments/FeedFragment.java
index a541136..1e7c26b 100644
--- a/app/src/main/java/com/example/recipeapp/Fragments/FeedFragment.java
+++ b/app/src/main/java/com/example/recipeapp/Fragments/FeedFragment.java
@@ -1,5 +1,6 @@
 package com.example.recipeapp.Fragments;
 
+import android.os.AsyncTask;
 import android.os.Bundle;
 
 import androidx.annotation.NonNull;
@@ -14,7 +15,9 @@ import android.view.ViewGroup;
 
 import com.example.recipeapp.Adapters.RecipesAdapter;
 import com.example.recipeapp.Models.Recipe;
+import com.example.recipeapp.ParseApplication;
 import com.example.recipeapp.R;
+import com.example.recipeapp.Room.RecipeDatabase;
 import com.example.recipeapp.databinding.FragmentFeedBinding;
 import com.example.recipeapp.databinding.RecipeItemBinding;
 
@@ -38,8 +41,9 @@ public class FeedFragment extends Fragment {
         // Required empty public constructor
     }
 
-    public static FeedFragment newInstance() {
+    public static FeedFragment newInstance(List<Recipe> recipes) {
         FeedFragment fragment = new FeedFragment();
+        fragment.recipes.addAll(recipes);
         Bundle args = new Bundle();
         fragment.setArguments(args);
         return fragment;
diff --git a/app/src/main/java/com/example/recipeapp/Fragments/SearchFragment.java b/app/src/main/java/com/example/recipeapp/Fragments/SearchFragment.java
index e3e4ad9..ae591fd 100644
--- a/app/src/main/java/com/example/recipeapp/Fragments/SearchFragment.java
+++ b/app/src/main/java/com/example/recipeapp/Fragments/SearchFragment.java
@@ -13,7 +13,7 @@ import android.view.ViewGroup;
 
 import com.example.recipeapp.Adapters.AutoCompleteAdapter;
 import com.example.recipeapp.BuildConfig;
-import com.example.recipeapp.Adapters.IngredientFilterAdapter;
+import com.example.recipeapp.Adapters.StepsAdapter;
 import com.example.recipeapp.MainActivity;
 import com.example.recipeapp.Models.Ingredient;
 import com.example.recipeapp.Models.Recipe;
@@ -46,8 +46,8 @@ public class SearchFragment extends Fragment {
     FragmentSearchBinding binding;
     List<String> included = new ArrayList<>();
     List<String> excluded = new ArrayList<>();
-    IngredientFilterAdapter includedAdapter;
-    IngredientFilterAdapter excludedAdapter;
+    StepsAdapter includedAdapter;
+    StepsAdapter excludedAdapter;
 
     public SearchFragment() {
     }
@@ -101,11 +101,11 @@ public class SearchFragment extends Fragment {
                             call.enqueue(callback);
                         }));
 
-        includedAdapter = new IngredientFilterAdapter(included, R.layout.item);
+        includedAdapter = new StepsAdapter(included, R.layout.item);
         binding.rvInclude.setAdapter(includedAdapter);
         binding.rvInclude.setLayoutManager(getFlexboxLayoutManager());
 
-        excludedAdapter = new IngredientFilterAdapter(excluded, R.layout.item);
+        excludedAdapter = new StepsAdapter(excluded, R.layout.item);
         binding.rvExclude.setAdapter(excludedAdapter);
         binding.rvExclude.setLayoutManager(getFlexboxLayoutManager());
 
@@ -144,11 +144,9 @@ public class SearchFragment extends Fragment {
                 FeedFragment feedFragment = ((MainActivity) getActivity()).getFeedFragment();
                 feedFragment.getRecipes().clear();
                 feedFragment.getRecipes().addAll(response.body().results);
-                getActivity().getSupportFragmentManager()
-                        .beginTransaction()
-                        .setCustomAnimations(R.animator.search_to_feed, R.animator.feed_to_search)
-                        .replace(R.id.fragmentPlaceholder, feedFragment)
-                        .commit();
+                ((MainActivity)(getActivity())).getBinding().bottomNavigation.setSelectedItemId(R.id.feed);
+
+//                Log.i(TAG, "success: " + json.toString());
             }
 
             @Override
diff --git a/app/src/main/java/com/example/recipeapp/IngredientsActivity.java b/app/src/main/java/com/example/recipeapp/IngredientsActivity.java
index 5ffb722..61c350c 100644
--- a/app/src/main/java/com/example/recipeapp/IngredientsActivity.java
+++ b/app/src/main/java/com/example/recipeapp/IngredientsActivity.java
@@ -3,7 +3,6 @@ package com.example.recipeapp;
 import androidx.appcompat.app.AppCompatActivity;
 import androidx.recyclerview.widget.LinearLayoutManager;
 
-import android.content.Intent;
 import android.os.Bundle;
 import android.util.Log;
 
@@ -21,6 +20,8 @@ public class IngredientsActivity extends AppCompatActivity {
 
     private static final String TAG = "INGR ACTIVITY";
 
+    public static final String RECIPE = "recipe";
+
     List<Ingredient> ingredients;
 
     ActivityIngridientsBinding binding;
@@ -32,10 +33,8 @@ public class IngredientsActivity extends AppCompatActivity {
         binding = ActivityIngridientsBinding.inflate(getLayoutInflater());
         setContentView(binding.getRoot());
 
-        ingredients = Parcels.unwrap(getIntent().getParcelableExtra(DetailsActivity.INGREDIENTS));
-
-        // Since there are limited number of call on free api, and a lot of ingredients, this line is used for testing.
-        //ingredients = ingredients.stream().limit(2).collect(Collectors.toList());
+        Recipe recipe = Parcels.unwrap(getIntent().getParcelableExtra(RECIPE));
+        ingredients = recipe.getIngredients();
 
         adapter = new IngredientsAdapter(ingredients);
 
diff --git a/app/src/main/java/com/example/recipeapp/LoginActivity.java b/app/src/main/java/com/example/recipeapp/LoginActivity.java
index e68dd8d..c9eda98 100644
--- a/app/src/main/java/com/example/recipeapp/LoginActivity.java
+++ b/app/src/main/java/com/example/recipeapp/LoginActivity.java
@@ -2,12 +2,9 @@ package com.example.recipeapp;
 
 import androidx.appcompat.app.AppCompatActivity;
 import androidx.databinding.DataBindingUtil;
-import androidx.lifecycle.ViewModelProviders;
 
-import android.content.Context;
 import android.content.Intent;
 import android.os.Bundle;
-import android.widget.Toast;
 
 import com.example.recipeapp.viewmodels.LoginViewModel;
 import com.parse.ParseUser;
@@ -22,28 +19,10 @@ public class LoginActivity extends AppCompatActivity {
         super.onCreate(savedInstanceState);
 
         binding = DataBindingUtil.setContentView(this, R.layout.activity_login);
-        binding.setViewModel(ViewModelProviders.of(this).get(LoginViewModel.class));
+        binding.setViewModel(new LoginViewModel());
 
         if(ParseUser.getCurrentUser() != null) {
             startActivity(new Intent(LoginActivity.this, MainActivity.class));
         }
-
-        binding.getViewModel().loginResult.observe(this, errorCode -> {
-            Context context = getApplicationContext();
-            switch (errorCode) {
-                case SUCCESS:
-                    startActivity(new Intent(context, MainActivity.class));
-                    finish();
-                    break;
-                case PARSE_ERROR:
-                    Toast.makeText(context, getString(R.string.login_failure, getString(R.string.unknown_error)), Toast.LENGTH_SHORT).show();
-                    break;
-                case PARSE_INVALID_CREDENTIALS:
-                    Toast.makeText(context, getString(R.string.login_failure, getString(R.string.invalid_credentials)), Toast.LENGTH_SHORT).show();
-                    break;
-            }
-        });
-
-        binding.getViewModel().startSignUp.observe(this, startSignUp -> startActivity(new Intent(LoginActivity.this, SignUpActivity.class)));
     }
 }
\ No newline at end of file
diff --git a/app/src/main/java/com/example/recipeapp/MainActivity.java b/app/src/main/java/com/example/recipeapp/MainActivity.java
index 837f340..81e9c1e 100644
--- a/app/src/main/java/com/example/recipeapp/MainActivity.java
+++ b/app/src/main/java/com/example/recipeapp/MainActivity.java
@@ -5,6 +5,8 @@ import android.app.PendingIntent;
 import android.content.Context;
 import android.content.Intent;
 import android.os.Bundle;
+import android.os.Handler;
+import android.os.Looper;
 import android.util.Log;
 import android.view.Menu;
 import android.view.MenuItem;
@@ -15,6 +17,8 @@ import androidx.fragment.app.FragmentManager;
 
 import com.example.recipeapp.Fragments.FeedFragment;
 import com.example.recipeapp.Fragments.SearchFragment;
+import com.example.recipeapp.Models.Recipe;
+import com.example.recipeapp.Room.RecipeDatabase;
 import com.example.recipeapp.Utils.NotificationAlarmReceiver;
 import com.example.recipeapp.databinding.ActivityMainBinding;
 import com.google.android.material.navigation.NavigationBarView;
@@ -22,6 +26,10 @@ import com.parse.LogOutCallback;
 import com.parse.ParseException;
 import com.parse.ParseUser;
 
+import java.util.List;
+import java.util.concurrent.ExecutorService;
+import java.util.concurrent.Executors;
+
 public class MainActivity extends AppCompatActivity {
 
     private static final String TAG = "MAIN ACTIVITY";
@@ -88,6 +96,18 @@ public class MainActivity extends AppCompatActivity {
                 }
             });
         }
+        if(item.getItemId() == R.id.bookmark) {
+            ExecutorService executor = Executors.newSingleThreadExecutor();
+            Handler handler = new Handler(Looper.getMainLooper());
+            executor.execute(() -> {
+                RecipeDatabase recipeDatabase = ((ParseApplication) getApplicationContext()).getRecipeDatabase();
+                recipeDatabase.runInTransaction(() -> {
+                    List<Recipe> recipes = recipeDatabase.recipeDao().getRecipes();
+                    handler.post(
+                            () -> fragmentManager.beginTransaction().replace(R.id.fragmentPlaceholder, FeedFragment.newInstance(recipes)).commit());
+                });
+            });
+        }
         return true;
     }
 
diff --git a/app/src/main/java/com/example/recipeapp/Models/API/RecipeTitle.java b/app/src/main/java/com/example/recipeapp/Models/API/RecipeTitle.java
index 9add0e4..bb72a17 100644
--- a/app/src/main/java/com/example/recipeapp/Models/API/RecipeTitle.java
+++ b/app/src/main/java/com/example/recipeapp/Models/API/RecipeTitle.java
@@ -13,6 +13,10 @@ public class RecipeTitle extends RetrofitAutocomplete {
     @SerializedName("title")
     String title;
 
+    public String getTitle() {
+        return title;
+    }
+
     @Override
     public String getName() {
         return title;
diff --git a/app/src/main/java/com/example/recipeapp/Models/API/Step.java b/app/src/main/java/com/example/recipeapp/Models/API/Step.java
index d1998bd..737ba5e 100644
--- a/app/src/main/java/com/example/recipeapp/Models/API/Step.java
+++ b/app/src/main/java/com/example/recipeapp/Models/API/Step.java
@@ -1,34 +1,13 @@
 package com.example.recipeapp.Models.API;
 
-import android.os.Parcelable;
-
-import com.google.auto.value.AutoValue;
-import com.google.gson.Gson;
-import com.google.gson.TypeAdapter;
 import com.google.gson.annotations.SerializedName;
 
 import org.parceler.Parcel;
 
 @Parcel
-public class Step{
+public class Step {
     @SerializedName("number")
-    int number;
+    public int number;
     @SerializedName("step")
-    String step;
-
-    public int getNumber() {
-        return number;
-    }
-
-    public void setNumber(int number) {
-        this.number = number;
-    }
-
-    public String getStep() {
-        return step;
-    }
-
-    public void setStep(String step) {
-        this.step = step;
-    }
+    public String step;
 }
diff --git a/app/src/main/java/com/example/recipeapp/Models/Ingredient.java b/app/src/main/java/com/example/recipeapp/Models/Ingredient.java
index dc986fa..735c967 100644
--- a/app/src/main/java/com/example/recipeapp/Models/Ingredient.java
+++ b/app/src/main/java/com/example/recipeapp/Models/Ingredient.java
@@ -1,16 +1,8 @@
 package com.example.recipeapp.Models;
 
-import android.os.Parcelable;
-
-import androidx.annotation.Nullable;
-
 import com.codepath.asynchttpclient.callback.JsonHttpResponseHandler;
-import com.example.recipeapp.Models.API.Step;
 import com.example.recipeapp.Retrofit.RetrofitAutocomplete;
-import com.google.auto.value.AutoValue;
-import com.google.gson.Gson;
 import com.google.gson.JsonArray;
-import com.google.gson.TypeAdapter;
 import com.google.gson.annotations.SerializedName;
 
 import org.json.JSONArray;
@@ -20,18 +12,28 @@ import org.parceler.Parcel;
 import java.util.ArrayList;
 import java.util.List;
 
-@AutoValue
-public abstract class Ingredient extends RetrofitAutocomplete implements Parcelable{
+@Parcel
+public class Ingredient extends RetrofitAutocomplete {
     @SerializedName("name")
-    public abstract String getName();
+    String name;
     @SerializedName("id")
-    public abstract Long getId();
+    Long id;
+    @SerializedName("title")
+    Long title;
+
+    public Ingredient(String name, Long id) {
+        this.name = name;
+        this.id = id;
+    }
+
+    public Ingredient() {
+    }
 
-    public static TypeAdapter<Ingredient> typeAdapter(Gson gson) {
-        return new AutoValue_Ingredient.GsonTypeAdapter(gson);
+    public String getName() {
+        return name;
     }
 
-    public Ingredient create(String name, Long id) {
-        return new AutoValue_Ingredient(name, id);
+    public Long getId() {
+        return id;
     }
 }
diff --git a/app/src/main/java/com/example/recipeapp/Models/Parse/Preferences.java b/app/src/main/java/com/example/recipeapp/Models/Parse/Preferences.java
index c8f9acd..362e925 100644
--- a/app/src/main/java/com/example/recipeapp/Models/Parse/Preferences.java
+++ b/app/src/main/java/com/example/recipeapp/Models/Parse/Preferences.java
@@ -115,9 +115,9 @@ public class Preferences extends ParseObject {
             e.printStackTrace();
         }
 
-        updateStd((float)recipe.getReadyInMinutes());
+        updateStd((float)recipe.getTimeToCook());
 
-        updateAverage(KEY_AVG_TIME, (double)recipe.getReadyInMinutes());
+        updateAverage(KEY_AVG_TIME, (double)recipe.getTimeToCook());
         updateAverage(KEY_AVG_PRICE, recipe.getPricePerServing());
         updateAverage(KEY_AVG_HEALTH, recipe.getHealthScore());
         Taste taste = ((Taste)getParseObject(KEY_USER_TASTE));
diff --git a/app/src/main/java/com/example/recipeapp/Models/Parse/Taste.java b/app/src/main/java/com/example/recipeapp/Models/Parse/Taste.java
index 807afc3..dfccf8b 100644
--- a/app/src/main/java/com/example/recipeapp/Models/Parse/Taste.java
+++ b/app/src/main/java/com/example/recipeapp/Models/Parse/Taste.java
@@ -2,13 +2,21 @@ package com.example.recipeapp.Models.Parse;
 
 import com.example.recipeapp.Models.Recipe;
 import com.example.recipeapp.Utils.Recommendation;
+import com.google.gson.JsonDeserializationContext;
+import com.google.gson.JsonElement;
+import com.google.gson.JsonObject;
+import com.google.gson.JsonParseException;
 import com.google.gson.annotations.SerializedName;
 import com.parse.Parse;
 import com.parse.ParseClassName;
 import com.parse.ParseException;
 import com.parse.ParseObject;
 
+import org.jetbrains.annotations.NotNull;
+
+import java.lang.reflect.Type;
 import java.util.ArrayList;
+import java.util.HashMap;
 import java.util.List;
 
 @ParseClassName("UserTaste")
@@ -52,7 +60,6 @@ public class Taste extends ParseObject {
         } catch (ParseException e) {
             e.printStackTrace();
         }
-
     }
 
     public Double getSweetness() {
diff --git a/app/src/main/java/com/example/recipeapp/Models/Recipe.java b/app/src/main/java/com/example/recipeapp/Models/Recipe.java
index 5c8c61e..10320ee 100644
--- a/app/src/main/java/com/example/recipeapp/Models/Recipe.java
+++ b/app/src/main/java/com/example/recipeapp/Models/Recipe.java
@@ -1,71 +1,68 @@
 package com.example.recipeapp.Models;
 
-import android.os.Parcel;
-import android.os.Parcelable;
-import android.util.Log;
-
-import androidx.annotation.Nullable;
+import androidx.room.ColumnInfo;
+import androidx.room.Entity;
+import androidx.room.PrimaryKey;
 
 import com.example.recipeapp.BuildConfig;
 import com.example.recipeapp.Models.API.Step;
 import com.example.recipeapp.Models.Parse.Preferences;
 import com.example.recipeapp.Models.Parse.Taste;
-import com.example.recipeapp.Retrofit.InstructionEnvelope;
 import com.example.recipeapp.Retrofit.RecipeApi;
 import com.example.recipeapp.Retrofit.RetrofitClientInstance;
 import com.example.recipeapp.Utils.Recommendation;
-import com.google.auto.value.AutoValue;
-import com.google.gson.Gson;
-import com.google.gson.TypeAdapter;
 import com.google.gson.annotations.SerializedName;
-import com.google.gson.stream.JsonReader;
-import com.google.gson.stream.JsonWriter;
-import com.parse.ParseUser;
-import com.ryanharter.auto.value.parcel.ParcelAdapter;
-
-import org.json.JSONArray;
-import org.json.JSONException;
-import org.json.JSONObject;
+
+import org.parceler.Parcel;
 import org.parceler.Transient;
 
 import java.io.IOException;
-import java.util.ArrayList;
 import java.util.List;
 
-import io.sweers.autotransient.AutoTransient;
 import retrofit2.Call;
 import retrofit2.Callback;
 import retrofit2.Response;
 
-@org.parceler.Parcel
+@Entity
+@Parcel
 public class Recipe {
     private static final String TAG = "TASTE";
     private static final double INVALID_RATING = -1;
+    @ColumnInfo
     @SerializedName("title")
-    String title;
+    public String title;
+    @ColumnInfo
     @SerializedName("image")
-    String image;
+    public String image;
+    @ColumnInfo
+    @PrimaryKey
     @SerializedName("id")
-    Long id;
+    public Long id;
+    @ColumnInfo
     @SerializedName("readyInMinutes")
-    Integer readyInMinutes;
+    public Integer readyInMinutes;
+    @ColumnInfo
     @SerializedName("healthScore")
-    Double healthScore;
+    public Double healthScore;
+    @ColumnInfo
     @SerializedName("pricePerServing")
-    Double pricePerServing;
+    public Double pricePerServing;
+    @ColumnInfo
     @SerializedName("servings")
-    Integer servings;
-    @SerializedName("analyzedInstructions")
-    @Nullable
-    @Transient
-    List<InstructionEnvelope<List<Step>>> analyzedInstructions;
+    public Integer servings;
+    @ColumnInfo
+//    @SerializedName("analyzedInstructions")
+    public List<Step> analyzedInstructions;
+    @ColumnInfo
     @SerializedName("extendedIngredients")
-    @Nullable
-    List<Ingredient> ingredients;
+    public List<Ingredient> ingredients;
+    @ColumnInfo
     @SerializedName("cuisines")
-    List<String> cuisines;
+    public List<String> cuisines;
+    @ColumnInfo
     @SerializedName("diets")
-    List<String> diets;
+    public List<String> diets;
+    public boolean isBookmarked = false;
     @SerializedName("summary")
     String summary;
 
@@ -75,115 +72,93 @@ public class Recipe {
     @Transient
     double userRating = INVALID_RATING;
 
-    public void getTaste(Callback<Taste> callback) {
-        RecipeApi service = RetrofitClientInstance.getRetrofitInstance().create(RecipeApi.class);
-        Call<Taste> call = service.getTasteById(id, BuildConfig.API_KEY);
-        call.enqueue(callback);
+    public void setCuisines(List<String> cuisines) {
+        this.cuisines = cuisines;
     }
 
-    public double getUserRating() {
-        return userRating;
+    public void setIngredients(List<Ingredient> ingredients) {
+        this.ingredients = ingredients;
+    }
+    
+    public List<String> getCuisines() {
+        return cuisines;
     }
 
-    public void setUserRating(double userRating) {
-        this.userRating = userRating;
+    public List<String> getDiets() {
+        return diets;
     }
 
-    public String getTitle() {
-        return title;
+    public void setId(Long id) {
+        this.id = id;
     }
 
-    public void setTitle(String title) {
-        this.title = title;
+    public String getTitle() {
+        return title;
     }
 
     public String getImage() {
         return image;
     }
 
-    public void setImage(String image) {
-        this.image = image;
+    public void setAnalyzedInstructions(List<Step> analyzedInstructions) {
+        this.analyzedInstructions = analyzedInstructions;
     }
 
     public Long getId() {
         return id;
     }
 
-    public void setId(Long id) {
-        this.id = id;
-    }
-
-    public Integer getReadyInMinutes() {
+    public Integer getTimeToCook() {
         return readyInMinutes;
     }
 
-    public void setReadyInMinutes(Integer readyInMinutes) {
-        this.readyInMinutes = readyInMinutes;
-    }
-
-    public Double getHealthScore() {
-        return healthScore;
-    }
-
-    public void setHealthScore(Double healthScore) {
-        this.healthScore = healthScore;
-    }
-
-    public Double getPricePerServing() {
-        return pricePerServing;
-    }
-
-    public void setPricePerServing(Double pricePerServing) {
-        this.pricePerServing = pricePerServing;
-    }
-
     public Integer getServings() {
         return servings;
     }
 
-    public void setServings(Integer servings) {
-        this.servings = servings;
-    }
-
-    @Nullable
-    public List<InstructionEnvelope<List<Step>>> getAnalyzedInstructions() {
+    public List<Step> getAnalyzedInstructions() {
         return analyzedInstructions;
     }
 
-    public void setAnalyzedInstructions(@Nullable List<InstructionEnvelope<List<Step>>> analyzedInstructions) {
-        this.analyzedInstructions = analyzedInstructions;
-    }
-
-    @Nullable
     public List<Ingredient> getIngredients() {
         return ingredients;
     }
 
-    public void setIngredients(@Nullable List<Ingredient> ingredients) {
-        this.ingredients = ingredients;
+    public Double getHealthScore() {
+        return healthScore;
     }
 
-    public List<String> getCuisines() {
-        return cuisines;
+    public Double getPricePerServing() {
+        return pricePerServing;
     }
 
-    public void setCuisines(List<String> cuisines) {
-        this.cuisines = cuisines;
+    public void getTaste(Preferences current) {
+        RecipeApi service = RetrofitClientInstance.getRetrofitInstance().create(RecipeApi.class);
+        Call<Taste> call = service.getTasteById(id, BuildConfig.API_KEY);
+        try {
+            Response<Taste> response = call.execute();
+            setUserRating(Recommendation.getRecipeDistance(Recipe.this, response.body(), current));
+        } catch (IOException e) {
+            e.printStackTrace();
+        }
     }
 
-    public List<String> getDiets() {
-        return diets;
+    public void getTaste(Callback<Taste> callback) {
+        RecipeApi service = RetrofitClientInstance.getRetrofitInstance().create(RecipeApi.class);
+        Call<Taste> call = service.getTasteById(id, BuildConfig.API_KEY);
+        call.enqueue(callback);
     }
 
-    public void setDiets(List<String> diets) {
-        this.diets = diets;
+    public double getUserRating() {
+        return userRating;
+    }
+
+    public void setUserRating(double userRating) {
+        this.userRating = userRating;
     }
 
     public String getSummary() {
         return summary;
     }
 
-    public void setSummary(String summary) {
-        this.summary = summary;
-    }
 }
diff --git a/app/src/main/java/com/example/recipeapp/ParseApplication.java b/app/src/main/java/com/example/recipeapp/ParseApplication.java
index 6d2ef88..1017818 100644
--- a/app/src/main/java/com/example/recipeapp/ParseApplication.java
+++ b/app/src/main/java/com/example/recipeapp/ParseApplication.java
@@ -4,10 +4,13 @@ import android.app.Application;
 import android.app.NotificationChannel;
 import android.app.NotificationManager;
 
+import androidx.room.Room;
+
 import com.example.recipeapp.Models.Parse.CuisineCounter;
 import com.example.recipeapp.Models.Parse.DietCounter;
 import com.example.recipeapp.Models.Parse.Preferences;
 import com.example.recipeapp.Models.Parse.Taste;
+import com.example.recipeapp.Room.RecipeDatabase;
 import com.example.recipeapp.Utils.NotificationAlarmReceiver;
 import com.parse.Parse;
 import com.parse.ParseObject;
@@ -16,6 +19,9 @@ import okhttp3.OkHttpClient;
 import okhttp3.logging.HttpLoggingInterceptor;
 
 public class ParseApplication extends Application {
+
+    RecipeDatabase recipeDatabase;
+
     @Override
     public void onCreate() {
         super.onCreate();
@@ -43,9 +49,15 @@ public class ParseApplication extends Application {
                 .clientKey(BuildConfig.PARSE_CLIENT_KEY)  // should correspond to Client key env variable
                 .server("https://parseapi.back4app.com").build());
 
+        recipeDatabase = Room.databaseBuilder(this, RecipeDatabase.class,
+                RecipeDatabase.NAME).fallbackToDestructiveMigration().build();
         createNotificationChannel();
     }
 
+    public RecipeDatabase getRecipeDatabase() {
+        return recipeDatabase;
+    }
+
     private void createNotificationChannel() {
         NotificationChannel channel = new NotificationChannel(NotificationAlarmReceiver.CHANNEL_ID,
                 NotificationAlarmReceiver.CHANNEL_NAME,
@@ -55,6 +67,5 @@ public class ParseApplication extends Application {
         // or other notification behaviors after this
         NotificationManager notificationManager = getSystemService(NotificationManager.class);
         notificationManager.createNotificationChannel(channel);
-
     }
 }
diff --git a/app/src/main/java/com/example/recipeapp/Repositories/RecipesRepository.java b/app/src/main/java/com/example/recipeapp/Repositories/RecipesRepository.java
deleted file mode 100644
index 8efdb10..0000000
--- a/app/src/main/java/com/example/recipeapp/Repositories/RecipesRepository.java
+++ /dev/null
@@ -1,46 +0,0 @@
-package com.example.recipeapp.Repositories;
-
-import android.util.Log;
-
-import androidx.lifecycle.LiveData;
-import androidx.lifecycle.MutableLiveData;
-
-import com.example.recipeapp.BuildConfig;
-import com.example.recipeapp.Models.Recipe;
-import com.example.recipeapp.Retrofit.RecipeApi;
-import com.example.recipeapp.Retrofit.RetrofitClientInstance;
-
-import retrofit2.Call;
-import retrofit2.Callback;
-import retrofit2.Response;
-
-public class RecipesRepository {
-
-    private static final String TAG = "RecipesRepo";
-    private static RecipesRepository recipesRepository;
-    RecipeApi service = RetrofitClientInstance.getRetrofitInstance().create(RecipeApi.class);
-
-    public static RecipesRepository getRepository() {
-        if(recipesRepository == null) {
-            recipesRepository = new RecipesRepository();
-        }
-        return recipesRepository;
-    }
-
-    public LiveData<Recipe> reloadRecipe(Long id) {
-        Call<Recipe> recipeById = service.getRecipeById(id, BuildConfig.API_KEY);
-        MutableLiveData<Recipe> recipeData = new MutableLiveData<>();
-        recipeById.enqueue(new Callback<Recipe>() {
-            @Override
-            public void onResponse(Call<Recipe> call, Response<Recipe> response) {
-                recipeData.postValue(response.body());
-            }
-
-            @Override
-            public void onFailure(Call<Recipe> call, Throwable t) {
-                Log.e(TAG, "Something went wrong: " + t);
-            }
-        });
-        return recipeData;
-    }
-}
diff --git a/app/src/main/java/com/example/recipeapp/Retrofit/AutoValueGsonFactory.java b/app/src/main/java/com/example/recipeapp/Retrofit/AutoValueGsonFactory.java
deleted file mode 100644
index 0290ab3..0000000
--- a/app/src/main/java/com/example/recipeapp/Retrofit/AutoValueGsonFactory.java
+++ /dev/null
@@ -1,11 +0,0 @@
-package com.example.recipeapp.Retrofit;
-
-import com.google.gson.TypeAdapterFactory;
-import com.ryanharter.auto.value.gson.GsonTypeAdapterFactory;
-
-@GsonTypeAdapterFactory
-public abstract class AutoValueGsonFactory implements TypeAdapterFactory {
-    public static TypeAdapterFactory create() {
-        return new AutoValueGson_AutoValueGsonFactory();
-    }
-}
\ No newline at end of file
diff --git a/app/src/main/java/com/example/recipeapp/Retrofit/InstructionEnvelope.java b/app/src/main/java/com/example/recipeapp/Retrofit/InstructionEnvelope.java
index bfed337..3f8a4c9 100644
--- a/app/src/main/java/com/example/recipeapp/Retrofit/InstructionEnvelope.java
+++ b/app/src/main/java/com/example/recipeapp/Retrofit/InstructionEnvelope.java
@@ -4,8 +4,6 @@ import com.google.gson.annotations.SerializedName;
 
 import org.parceler.Parcel;
 
-import java.io.Serializable;
-
 import retrofit2.http.PATCH;
 
 public class InstructionEnvelope<T> {
diff --git a/app/src/main/java/com/example/recipeapp/Retrofit/RetrofitClientInstance.java b/app/src/main/java/com/example/recipeapp/Retrofit/RetrofitClientInstance.java
index bf5e153..79e6d42 100644
--- a/app/src/main/java/com/example/recipeapp/Retrofit/RetrofitClientInstance.java
+++ b/app/src/main/java/com/example/recipeapp/Retrofit/RetrofitClientInstance.java
@@ -1,5 +1,8 @@
 package com.example.recipeapp.Retrofit;
 
+import com.example.recipeapp.Models.Recipe;
+import com.example.recipeapp.Utils.RecipeDeserializer;
+import com.google.gson.Gson;
 import com.google.gson.GsonBuilder;
 
 import retrofit2.Retrofit;
@@ -11,12 +14,13 @@ public class RetrofitClientInstance {
 
     public static Retrofit getRetrofitInstance() {
         if (retrofit == null) {
-            GsonConverterFactory gsonConverterFactory = GsonConverterFactory.create(
-                    new GsonBuilder().registerTypeAdapterFactory(AutoValueGsonFactory.create())
-                            .create());
+            Gson gson =
+                    new GsonBuilder()
+                            .registerTypeAdapter(Recipe.class, new RecipeDeserializer())
+                            .create();
             retrofit = new Retrofit.Builder()
                     .baseUrl(BASE_URL)
-                    .addConverterFactory(gsonConverterFactory)
+                    .addConverterFactory(GsonConverterFactory.create(gson))
                     .build();
         }
         return retrofit;
diff --git a/app/src/main/java/com/example/recipeapp/Room/Converters.java b/app/src/main/java/com/example/recipeapp/Room/Converters.java
new file mode 100644
index 0000000..eef02b4
--- /dev/null
+++ b/app/src/main/java/com/example/recipeapp/Room/Converters.java
@@ -0,0 +1,57 @@
+package com.example.recipeapp.Room;
+
+import androidx.room.TypeConverter;
+
+import com.example.recipeapp.Models.API.Step;
+import com.example.recipeapp.Models.Ingredient;
+import com.example.recipeapp.Retrofit.InstructionEnvelope;
+import com.google.gson.Gson;
+import com.google.gson.reflect.TypeToken;
+
+import java.lang.reflect.Type;
+import java.util.ArrayList;
+import java.util.List;
+
+public class Converters {
+
+    @TypeConverter
+    public static List<String> stringListFromString(String value) {
+        Type listType = new TypeToken<ArrayList<String>>() {}.getType();
+        return new Gson().fromJson(value, listType);
+    }
+
+    @TypeConverter
+    public static String stringFromArrayList(List<String> list) {
+        Gson gson = new Gson();
+        String json = gson.toJson(list);
+        return json;
+    }
+
+    @TypeConverter
+    public static List<Ingredient> ingredientListFromString(String value) {
+        Type listType = new TypeToken<List<Ingredient>>() {}.getType();
+        return new Gson().fromJson(value, listType);
+    }
+
+    @TypeConverter
+    public static String ingredientFromArrayList(List<Ingredient> list) {
+        Gson gson = new Gson();
+        String json = gson.toJson(list);
+        return json;
+    }
+
+    @TypeConverter
+    public static List<Step> analyzedInstructionsFromString(String value) {
+        Type listType = new TypeToken<List<Step>>() {}.getType();
+        List<Step> o = new Gson().fromJson(value, listType);
+        return o;
+    }
+
+    @TypeConverter
+    public static String stringFromAnalyzedInstructions(List<Step> list) {
+        Gson gson = new Gson();
+        String json = gson.toJson(list);
+        return json;
+    }
+
+}
diff --git a/app/src/main/java/com/example/recipeapp/Room/RecipeDao.java b/app/src/main/java/com/example/recipeapp/Room/RecipeDao.java
new file mode 100644
index 0000000..d6b8eca
--- /dev/null
+++ b/app/src/main/java/com/example/recipeapp/Room/RecipeDao.java
@@ -0,0 +1,24 @@
+package com.example.recipeapp.Room;
+
+import androidx.room.Dao;
+import androidx.room.Delete;
+import androidx.room.Insert;
+import androidx.room.OnConflictStrategy;
+import androidx.room.Query;
+
+import com.example.recipeapp.Models.Recipe;
+
+import java.util.List;
+
+@Dao
+public interface RecipeDao {
+
+    @Query("SELECT * FROM Recipe")
+    List<Recipe> getRecipes();
+
+    @Insert(onConflict = OnConflictStrategy.REPLACE)
+    void insertRecipe(Recipe... recipe);
+
+    @Delete
+    void delete(Recipe recipe);
+}
diff --git a/app/src/main/java/com/example/recipeapp/Room/RecipeDatabase.java b/app/src/main/java/com/example/recipeapp/Room/RecipeDatabase.java
new file mode 100644
index 0000000..ba8aa40
--- /dev/null
+++ b/app/src/main/java/com/example/recipeapp/Room/RecipeDatabase.java
@@ -0,0 +1,15 @@
+package com.example.recipeapp.Room;
+
+import androidx.room.Database;
+import androidx.room.RoomDatabase;
+import androidx.room.TypeConverters;
+
+import com.example.recipeapp.Models.Recipe;
+
+@Database(entities = {Recipe.class}, version = 2)
+@TypeConverters({Converters.class})
+public abstract class RecipeDatabase extends RoomDatabase {
+    public abstract RecipeDao recipeDao();
+
+    public static final String NAME = "RecipeDataBase";
+}
diff --git a/app/src/main/java/com/example/recipeapp/SignUpActivity.java b/app/src/main/java/com/example/recipeapp/SignUpActivity.java
index f32891a..057b32a 100644
--- a/app/src/main/java/com/example/recipeapp/SignUpActivity.java
+++ b/app/src/main/java/com/example/recipeapp/SignUpActivity.java
@@ -1,17 +1,24 @@
 package com.example.recipeapp;
 
+import androidx.appcompat.app.AppCompatActivity;
+
 import android.content.Intent;
 import android.os.Bundle;
+import android.util.Log;
+import android.view.View;
 import android.widget.Toast;
 
-import androidx.appcompat.app.AppCompatActivity;
-import androidx.lifecycle.ViewModelProviders;
-
+import com.example.recipeapp.Models.Parse.Preferences;
+import com.example.recipeapp.Models.Parse.Taste;
 import com.example.recipeapp.databinding.ActivitySignUpBinding;
-import com.example.recipeapp.viewmodels.SignUpViewModel;
+import com.parse.ParseException;
+import com.parse.ParseUser;
+import com.parse.SignUpCallback;
 
 public class SignUpActivity extends AppCompatActivity {
 
+    private static final String USERNAME = "username";
+    private static final String PASSWORD = "password";
     private static final String TAG = "SIGN UP ACTIVITY";
     ActivitySignUpBinding binding;
 
@@ -23,16 +30,35 @@ public class SignUpActivity extends AppCompatActivity {
         binding = ActivitySignUpBinding.inflate(getLayoutInflater());
         setContentView(binding.getRoot());
 
-        binding.setViewModel(ViewModelProviders.of(this).get(SignUpViewModel.class));
+        binding.btnSignUp.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                ParseUser user = new ParseUser();
 
-        binding.getViewModel().signUpResult.observe(this, signUpResult -> {
-            switch (signUpResult) {
-                case SUCCESS:
+                user.put(USERNAME, binding.etLogin.getText().toString());
+                user.put(PASSWORD, binding.etLogin.getText().toString());
+                user.signUpInBackground((SignUpCallback) e -> {
+                    if(e != null) {
+                        Toast.makeText(SignUpActivity.this, "Something went wrong", Toast.LENGTH_SHORT).show();
+                        Log.i(TAG, e.toString());
+                        return;
+                    }
+                    Preferences pref = new Preferences();
+                    Taste taste = new Taste();
+                    try {
+                        taste.save();
+                        pref.put(Preferences.KEY_USER_TASTE, taste);
+                        pref.saveInBackground(e1 -> {
+                            user.put(Preferences.PREFERENCES, pref);
+                            user.saveInBackground();
+                        });
+                    } catch (ParseException ex) {
+                        ex.printStackTrace();
+                    }
+                    Toast.makeText(SignUpActivity.this, "Registration successful", Toast.LENGTH_SHORT).show();
                     startActivity(new Intent(SignUpActivity.this, LoginActivity.class));
-                case ERROR_CREATING_PREFERENCES:
-                case ERROR_CREATING_TASTE:
-                case ERROR_CREATING_USER:
-                    Toast.makeText(SignUpActivity.this, signUpResult.toString(), Toast.LENGTH_LONG).show();
+                });
+
             }
         });
     }
diff --git a/app/src/main/java/com/example/recipeapp/Utils/RecipeDeserializer.java b/app/src/main/java/com/example/recipeapp/Utils/RecipeDeserializer.java
new file mode 100644
index 0000000..1cc5911
--- /dev/null
+++ b/app/src/main/java/com/example/recipeapp/Utils/RecipeDeserializer.java
@@ -0,0 +1,35 @@
+package com.example.recipeapp.Utils;
+
+import com.example.recipeapp.Models.API.Step;
+import com.example.recipeapp.Models.Parse.Taste;
+import com.example.recipeapp.Models.Recipe;
+import com.google.gson.Gson;
+import com.google.gson.JsonArray;
+import com.google.gson.JsonDeserializationContext;
+import com.google.gson.JsonDeserializer;
+import com.google.gson.JsonElement;
+import com.google.gson.JsonObject;
+import com.google.gson.JsonParseException;
+
+import java.lang.reflect.Type;
+import java.util.ArrayList;
+import java.util.List;
+
+public class RecipeDeserializer implements JsonDeserializer<Recipe> {
+    @Override
+    public Recipe deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context) throws JsonParseException {
+        JsonObject jsonObject = json.getAsJsonObject();
+        Recipe recipe = new Gson().fromJson(jsonObject, Recipe.class);
+        JsonArray analyzedInstructions = jsonObject.get("analyzedInstructions").getAsJsonArray();
+        if(analyzedInstructions.size() == 0) {
+            return recipe;
+        }
+        JsonArray jsonArray = analyzedInstructions.get(0).getAsJsonObject().get("steps").getAsJsonArray();
+        List<Step> instructionsList = new ArrayList<>();
+        for(int i = 0; i < jsonArray.size(); i++) {
+            instructionsList.add(new Gson().fromJson(jsonArray.get(i), Step.class));
+        }
+        recipe.setAnalyzedInstructions(instructionsList);
+        return recipe;
+    }
+}
diff --git a/app/src/main/java/com/example/recipeapp/Utils/Recommendation.java b/app/src/main/java/com/example/recipeapp/Utils/Recommendation.java
index 0164c31..dceb426 100644
--- a/app/src/main/java/com/example/recipeapp/Utils/Recommendation.java
+++ b/app/src/main/java/com/example/recipeapp/Utils/Recommendation.java
@@ -20,7 +20,6 @@ import com.parse.ParseException;
 import com.parse.ParseObject;
 import com.parse.ParseUser;
 
-import java.io.IOException;
 import java.util.Arrays;
 import java.util.Collection;
 import java.util.Collections;
@@ -51,8 +50,6 @@ public class Recommendation {
         }
 
         RecipeApi service = RetrofitClientInstance.getRetrofitInstance().create(RecipeApi.class);
-        // I think it's ok to live a call here, since Recommendations acts as a repository
-        // Should I rename it?
         Call<Envelope<List<Recipe>>> call = service.getSortedRecipes(BuildConfig.API_KEY,
                 getListRecommendation(currentPreferences, generalPreferences, Preferences.KEY_USER_CUISINE),
                 getListRecommendation(currentPreferences, generalPreferences, Preferences.KEY_USER_DIET),
@@ -71,7 +68,7 @@ public class Recommendation {
                 List<Recipe> recipes = response.body().results;
                 Executor.Builder builder = new Executor.Builder();
                 for(Recipe recipe : recipes) {
-                    builder = builder.add(() -> getTaste(recipe, current));
+                    builder = builder.add(() -> recipe.getTaste(current));
                 }
                 builder = builder.callback(() -> {
                     Collections.sort(recipes, Comparator.comparingDouble(Recipe::getUserRating));
@@ -87,17 +84,6 @@ public class Recommendation {
         };
     }
 
-    public static void getTaste(Recipe recipe, Preferences current) {
-        RecipeApi service = RetrofitClientInstance.getRetrofitInstance().create(RecipeApi.class);
-        Call<Taste> call = service.getTasteById(recipe.getId(), BuildConfig.API_KEY);
-        try {
-            Response<Taste> response = call.execute();
-            recipe.setUserRating(Recommendation.getRecipeDistance(recipe, response.body(), current));
-        } catch (IOException e) {
-            e.printStackTrace();
-        }
-    }
-
     public static String getListRecommendation(Preferences current, Preferences general, String key) {
         try {
             current.fetchIfNeeded();
diff --git a/app/src/main/java/com/example/recipeapp/viewmodels/DetailsViewModel.java b/app/src/main/java/com/example/recipeapp/viewmodels/DetailsViewModel.java
deleted file mode 100644
index 6c0addd..0000000
--- a/app/src/main/java/com/example/recipeapp/viewmodels/DetailsViewModel.java
+++ /dev/null
@@ -1,107 +0,0 @@
-package com.example.recipeapp.viewmodels;
-
-import android.util.Log;
-import android.widget.ImageView;
-
-import androidx.lifecycle.MutableLiveData;
-import androidx.lifecycle.ViewModel;
-import androidx.recyclerview.widget.RecyclerView;
-
-import com.bumptech.glide.Glide;
-import com.example.recipeapp.Adapters.StepsAdapter;
-import com.example.recipeapp.Models.API.Step;
-import com.example.recipeapp.Models.Ingredient;
-import com.example.recipeapp.Models.Recipe;
-import com.example.recipeapp.Repositories.RecipesRepository;
-
-import java.util.ArrayList;
-import java.util.List;
-
-import retrofit2.Call;
-import retrofit2.Callback;
-import retrofit2.Response;
-
-public class DetailsViewModel extends ViewModel {
-    private static final String TAG = "DetailsViewModel";
-    public MutableLiveData<List<Ingredient>> showIngredients = new MutableLiveData<>();
-    private MutableLiveData<List<StepViewModel>> steps = new MutableLiveData<>();
-    RecipesRepository repo = RecipesRepository.getRepository();
-
-    private Recipe recipe;
-
-    private final String servings;
-    private final String time;
-    private final String image;
-
-    public DetailsViewModel(Recipe recipe) {
-        this.recipe = recipe;
-        servings = recipe.getServings().toString();
-        time = recipe.getReadyInMinutes().toString();
-        image = recipe.getImage();
-        steps.setValue(new ArrayList<>());
-        setDetails();
-        if(recipe.getIngredients() == null) {
-            repo.reloadRecipe(recipe.getId());
-        }
-    }
-
-    public MutableLiveData<List<StepViewModel>> getSteps() {
-        return steps;
-    }
-
-    private void setDetails() {
-        List<StepViewModel> stepViewModels = new ArrayList<>();
-        if(recipe.getAnalyzedInstructions() == null) {
-            Log.w(TAG, "Failed to load instructions");
-            return;
-        }
-        for(Step item : recipe.getAnalyzedInstructions().get(0).results) {
-            stepViewModels.add(new StepViewModel(item.getStep(), item.getNumber()));
-        }
-        steps.setValue(stepViewModels);
-    }
-
-    public void showIngredients() {
-        showIngredients.setValue(recipe.getIngredients());
-    }
-
-    public Recipe getRecipe() {
-        return recipe;
-    }
-
-    public void setRecipe(Recipe recipe) {
-        this.recipe = recipe;
-    }
-
-    public String getServings() {
-        return String.format("%s\nservings", servings);
-    }
-
-    public String getTime() {
-        return String.format("%s minutes", time);
-    }
-
-    public String getImage() {
-        return image;
-    }
-
-    @androidx.databinding.BindingAdapter("recipePhoto")
-    public static void bindItemViewModels(ImageView imageView, String image) {
-        Glide.with(imageView.getContext()).load(image).into(imageView);
-    }
-
-    @androidx.databinding.BindingAdapter("stepsViewModel")
-    public static void bindItemViewModels(RecyclerView recyclerView, List<StepViewModel> data) {
-        StepsAdapter adapter = getOrCreateAdapter(recyclerView);
-        adapter.updateItems(data);
-    }
-
-    private static StepsAdapter getOrCreateAdapter(RecyclerView recyclerView) {
-        if(recyclerView.getAdapter() != null) {
-            return (StepsAdapter) recyclerView.getAdapter();
-        }
-        StepsAdapter adapter = new StepsAdapter();
-        recyclerView.setAdapter(adapter);
-        return adapter;
-    }
-}
diff --git a/app/src/main/java/com/example/recipeapp/viewmodels/LoginViewModel.java b/app/src/main/java/com/example/recipeapp/viewmodels/LoginViewModel.java
index 2cab2db..151278a 100644
--- a/app/src/main/java/com/example/recipeapp/viewmodels/LoginViewModel.java
+++ b/app/src/main/java/com/example/recipeapp/viewmodels/LoginViewModel.java
@@ -1,55 +1,46 @@
 package com.example.recipeapp.viewmodels;
 
+import android.content.Context;
+import android.content.Intent;
 import android.util.Log;
+import android.view.View;
+import android.widget.Toast;
 
-import androidx.lifecycle.MutableLiveData;
-import androidx.lifecycle.ViewModel;
+import androidx.databinding.BaseObservable;
 
-import com.parse.LogInCallback;
-import com.parse.ParseException;
+import com.example.recipeapp.MainActivity;
+import com.example.recipeapp.SignUpActivity;
 import com.parse.ParseUser;
 
-public class LoginViewModel extends ViewModel {
+public class LoginViewModel extends BaseObservable {
 
     private static final String TAG = "Logging in: ";
-    private static final int INVALID_LOGIN_PARAMS = 101;
-    private String username = "";
-    private String password = "";
 
-
-    public MutableLiveData<Boolean> startSignUp = new MutableLiveData<>();
-    public MutableLiveData<LoginResult> loginResult = new MutableLiveData<>();
+    private String username;
+    private String password;
 
     public LoginViewModel() {
+
     }
 
-    public void login() {
+    public void login(View view) {
         ParseUser.logInInBackground(
                 username,
                 password,
-                new LogInCallback() {
-                    @Override
-                    public void done(ParseUser user, ParseException e) {
-                        if(e != null) {
-                            Log.i(TAG, "Issue with login" + e);
-                            switch (e.getCode()) {
-                                case INVALID_LOGIN_PARAMS:
-                                case ParseException.USERNAME_MISSING:
-                                case ParseException.PASSWORD_MISSING:
-                                    loginResult.setValue(LoginResult.PARSE_INVALID_CREDENTIALS);
-                                    break;
-                                default:
-                                    loginResult.setValue(LoginResult.PARSE_ERROR);
-                            }
-                            return;
-                        }
-                        loginResult.setValue(LoginResult.SUCCESS);
+                (user, e) -> {
+                    Context context = view.getContext();
+                    if(e != null) {
+                        Log.i(TAG, "Issue with login" + e);
+                        Toast.makeText(context, "Unable to login", Toast.LENGTH_SHORT).show();
+                        return;
                     }
+                    context.startActivity(new Intent(context, MainActivity.class));
                 });
     }
 
-    public void signUp() {
-        startSignUp.setValue(true);
+    public void signUp(View view) {
+        Context context = view.getContext();
+        context.startActivity(new Intent(context, SignUpActivity.class));
     }
 
     public String getUsername() {
@@ -67,10 +58,4 @@ public class LoginViewModel extends ViewModel {
     public void setPassword(String password) {
         this.password = password;
     }
-
-    public enum LoginResult {
-        SUCCESS,
-        PARSE_ERROR,
-        PARSE_INVALID_CREDENTIALS;
-    }
 }
diff --git a/app/src/main/java/com/example/recipeapp/viewmodels/SignUpViewModel.java b/app/src/main/java/com/example/recipeapp/viewmodels/SignUpViewModel.java
deleted file mode 100644
index 9bcc560..0000000
--- a/app/src/main/java/com/example/recipeapp/viewmodels/SignUpViewModel.java
+++ /dev/null
@@ -1,83 +0,0 @@
-package com.example.recipeapp.viewmodels;
-
-import android.content.Intent;
-import android.util.Log;
-import android.view.View;
-import android.widget.Toast;
-
-import androidx.lifecycle.MutableLiveData;
-import androidx.lifecycle.ViewModel;
-import androidx.lifecycle.ViewModelProviders;
-import android.widget.Toast;
-
-import androidx.lifecycle.MutableLiveData;
-
-import com.example.recipeapp.LoginActivity;
-import com.example.recipeapp.Models.Parse.Preferences;
-import com.example.recipeapp.Models.Parse.Taste;
-import com.example.recipeapp.SignUpActivity;
-import com.parse.ParseException;
-import com.parse.ParseUser;
-import com.parse.SaveCallback;
-import com.parse.SignUpCallback;
-
-public class SignUpViewModel extends ViewModel {
-    private static final String USERNAME = "username";
-    private static final String PASSWORD = "password";
-    private static final String TAG = "Sign up view model: ";
-
-    public MutableLiveData<SignUpResult> signUpResult = new MutableLiveData<>();
-
-    private String username = "";
-    private String password = "";
-
-    public String getUsername() {
-        return username;
-    }
-
-    public void setUsername(String username) {
-        this.username = username;
-    }
-
-    public String getPassword() {
-        return password;
-    }
-
-    public void setPassword(String password) {
-        this.password = password;
-    }
-
-    public void signUp() {
-        ParseUser user = new ParseUser();
-        user.put(USERNAME, username);
-        user.put(PASSWORD, password);
-        user.signUpInBackground((SignUpCallback) e -> {
-            if(e != null) {
-                signUpResult.setValue(SignUpResult.ERROR_CREATING_USER);
-                Log.i(TAG, e.toString());
-                return;
-            }
-            Preferences pref = new Preferences();
-            Taste taste = new Taste();
-            try {
-                taste.save();
-                pref.put(Preferences.KEY_USER_TASTE, taste);
-                pref.saveInBackground(e1 -> {
-                    user.put(Preferences.PREFERENCES, pref);
-                    user.saveInBackground(e2 -> signUpResult.setValue(SignUpResult.ERROR_CREATING_PREFERENCES));
-                });
-            } catch (ParseException ex) {
-                signUpResult.setValue(SignUpResult.ERROR_CREATING_TASTE);
-                ex.printStackTrace();
-            }
-            signUpResult.setValue(SignUpResult.SUCCESS);
-        });
-    }
-
-    public enum SignUpResult {
-        SUCCESS,
-        ERROR_CREATING_USER,
-        ERROR_CREATING_TASTE,
-        ERROR_CREATING_PREFERENCES
-    }
-}
diff --git a/app/src/main/java/com/example/recipeapp/viewmodels/StepViewModel.java b/app/src/main/java/com/example/recipeapp/viewmodels/StepViewModel.java
deleted file mode 100644
index 5356a1e..0000000
--- a/app/src/main/java/com/example/recipeapp/viewmodels/StepViewModel.java
+++ /dev/null
@@ -1,16 +0,0 @@
-package com.example.recipeapp.viewmodels;
-
-public class StepViewModel {
-
-    private final String step;
-    private final int number;
-
-    public StepViewModel(String step, int number) {
-        this.step = step;
-        this.number = number;
-    }
-
-    public String getStep() {
-        return number + ". " + step;
-    }
-}
diff --git a/app/src/main/res/animator/feed_to_search.xml b/app/src/main/res/animator/feed_to_search.xml
deleted file mode 100644
index 3480dba..0000000
--- a/app/src/main/res/animator/feed_to_search.xml
+++ /dev/null
@@ -1,9 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<set>
-    <objectAnimator xmlns:android="http://schemas.android.com/apk/res/android"
-        android:propertyName="y"
-        android:valueType="floatType"
-        android:valueFrom="0"
-        android:valueTo="-1280"
-        android:duration="0"/>
-</set>
\ No newline at end of file
diff --git a/app/src/main/res/animator/search_to_feed.xml b/app/src/main/res/animator/search_to_feed.xml
deleted file mode 100644
index 5ec911d..0000000
--- a/app/src/main/res/animator/search_to_feed.xml
+++ /dev/null
@@ -1,9 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<set>
-    <objectAnimator xmlns:android="http://schemas.android.com/apk/res/android"
-        android:propertyName="y"
-        android:valueType="floatType"
-        android:valueFrom="-1280"
-        android:valueTo="0"
-        android:duration="1000"/>
-</set>
\ No newline at end of file
diff --git a/app/src/main/res/drawable/ic_baseline_message_24.xml b/app/src/main/res/drawable/ic_baseline_message_24.xml
deleted file mode 100644
index c20e247..0000000
--- a/app/src/main/res/drawable/ic_baseline_message_24.xml
+++ /dev/null
@@ -1,5 +0,0 @@
-<vector android:autoMirrored="true" android:height="24dp"
-    android:tint="#000000" android:viewportHeight="24"
-    android:viewportWidth="24" android:width="24dp" xmlns:android="http://schemas.android.com/apk/res/android">
-    <path android:fillColor="@android:color/white" android:pathData="M20,2L4,2c-1.1,0 -1.99,0.9 -1.99,2L2,22l4,-4h14c1.1,0 2,-0.9 2,-2L22,4c0,-1.1 -0.9,-2 -2,-2zM18,14L6,14v-2h12v2zM18,11L6,11L6,9h12v2zM18,8L6,8L6,6h12v2z"/>
-</vector>
diff --git a/app/src/main/res/layout/activity_details.xml b/app/src/main/res/layout/activity_details.xml
index 678ef84..60ccdcb 100644
--- a/app/src/main/res/layout/activity_details.xml
+++ b/app/src/main/res/layout/activity_details.xml
@@ -1,92 +1,86 @@
 <?xml version="1.0" encoding="utf-8"?>
-<layout xmlns:android="http://schemas.android.com/apk/res/android"
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools">
-    <data>
-        <variable
-            name="viewModel"
-            type="com.example.recipeapp.viewmodels.DetailsViewModel" />
-    </data>
-    <androidx.constraintlayout.widget.ConstraintLayout
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context=".DetailsActivity">
+
+    <include
+        layout="@layout/interactions"
+        android:id="@+id/options"
+        app:layout_constraintTop_toTopOf="@+id/ivImage"
+        app:layout_constraintBottom_toBottomOf="@id/ivImage"
+        />
+
+    <ImageView
+        android:id="@+id/ivImage"
         android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        tools:context=".DetailsActivity">
+        android:layout_height="wrap_content"
+        app:layout_constraintTop_toTopOf="parent"
+        tools:src="@drawable/ic_launcher_background"
+        android:minHeight="100dp"
+        android:background="@drawable/bottom_border"
+        />
+    <TextView
+        android:id="@+id/tvTime"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        android:background="@drawable/transparent_rectangle"
 
-        <ImageView
-            android:id="@+id/ivImage"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            app:layout_constraintTop_toTopOf="parent"
-            tools:src="@drawable/ic_launcher_background"
-            app:recipePhoto="@{viewModel.image}"
-            android:minHeight="100dp"
-            android:background="@drawable/bottom_border"
-            />
-        <TextView
-            android:id="@+id/tvTime"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            app:layout_constraintTop_toTopOf="parent"
-            app:layout_constraintEnd_toEndOf="parent"
-            android:background="@drawable/transparent_rectangle"
-            tools:text="20 minutes"
-            android:text="@{viewModel.time}"
-            android:padding="5dp"
-            android:layout_margin="10dp"
-            />
-        <TextView
-            android:id="@+id/tvSteps"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            app:layout_constraintTop_toBottomOf="@+id/ivImage"
-            app:layout_constraintStart_toStartOf="parent"
-            android:text="@string/instructions"
-            android:layout_margin="10dp"
-            android:textSize="20sp"
-            />
+        android:text="20 minutes"
+        android:padding="5dp"
+        android:layout_margin="10dp"
+        />
+    <TextView
+        android:id="@+id/tvSteps"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        app:layout_constraintTop_toBottomOf="@+id/ivImage"
+        app:layout_constraintStart_toStartOf="parent"
+        android:text="@string/instructions"
+        android:layout_margin="10dp"
+        android:textSize="20sp"
+        />
 
-        <TextView
-            android:id="@+id/tvServings"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            app:layout_constraintBaseline_toBottomOf="@id/ivImage"
-            app:layout_constraintEnd_toEndOf="parent"
-            android:layout_marginEnd="40dp"
-            android:background="@drawable/round_back"
-            android:padding="7dp"
-            android:gravity="center"
-            android:textSize="10sp"
-            tools:text="20\nServings"
-            android:text="@{viewModel.servings}"
-            />
+    <TextView
+        android:id="@+id/tvServings"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        app:layout_constraintBaseline_toBottomOf="@id/ivImage"
+        app:layout_constraintEnd_toEndOf="parent"
+        android:layout_marginEnd="40dp"
+        android:background="@drawable/round_back"
+        android:padding="7dp"
+        android:gravity="center"
+        android:textSize="10sp"
+        android:text="20\nServings"
+        />
 
-        <androidx.recyclerview.widget.RecyclerView
-            android:id="@+id/rvSteps"
-            android:layout_width="match_parent"
-            android:layout_height="0dp"
-            android:padding="10dp"
-            app:layout_constraintBottom_toBottomOf="parent"
-            app:layout_constraintTop_toBottomOf="@id/tvSteps"
-            app:layout_constraintVertical_bias="0.0"
-            tools:layout_editor_absoluteX="0dp"
-            app:layoutManager="androidx.recyclerview.widget.LinearLayoutManager"
-            app:stepsViewModel="@{viewModel.steps}"
-            />
+    <androidx.recyclerview.widget.RecyclerView
+        android:id="@+id/rvSteps"
+        android:layout_width="match_parent"
+        android:layout_height="0dp"
+        android:padding="10dp"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintTop_toBottomOf="@id/tvSteps"
+        app:layout_constraintVertical_bias="0.0"
+        tools:layout_editor_absoluteX="0dp" />
 
-        <androidx.appcompat.widget.AppCompatButton
-            android:background="@drawable/ingr_back"
-            android:padding="5dp"
-            android:layout_margin="5dp"
-            android:id="@+id/btnIngredients"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/ingredients"
-            android:textAllCaps="false"
-            android:textSize="20sp"
-            app:layout_constraintEnd_toEndOf="parent"
-            app:layout_constraintBottom_toBottomOf="parent"
-            android:onClick="@{() -> viewModel.showIngredients()}"
-            />
+    <androidx.appcompat.widget.AppCompatButton
+        android:background="@drawable/ingr_back"
+        android:padding="5dp"
+        android:layout_margin="5dp"
+        android:id="@+id/btnIngredients"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="@string/ingredients"
+        android:textAllCaps="false"
+        android:textSize="20sp"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintBottom_toBottomOf="parent"
+        />
 
-    </androidx.constraintlayout.widget.ConstraintLayout>
-</layout>
\ No newline at end of file
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
diff --git a/app/src/main/res/layout/activity_login.xml b/app/src/main/res/layout/activity_login.xml
index b7f7496..8f7476c 100644
--- a/app/src/main/res/layout/activity_login.xml
+++ b/app/src/main/res/layout/activity_login.xml
@@ -43,7 +43,7 @@
             android:layout_marginStart="20dp"
             android:layout_marginEnd="20dp"
             android:id="@+id/btnLogin"
-            android:onClick="@{() -> viewModel.login()}"
+            android:onClick="@{(v) -> viewModel.login(v)}"
             android:backgroundTint="@color/blue"
             app:layout_constraintTop_toBottomOf="@+id/etPass"
             android:text="@string/login"
@@ -59,7 +59,7 @@
             android:textColor="@color/blue"
             android:layout_marginStart="20dp"
             android:layout_marginEnd="20dp"
-            android:onClick="@{() -> viewModel.signUp()}"
+            android:onClick="@{(v) -> viewModel.signUp(v)}"
             />
     </androidx.constraintlayout.widget.ConstraintLayout>
 </layout>
\ No newline at end of file
diff --git a/app/src/main/res/layout/activity_sign_up.xml b/app/src/main/res/layout/activity_sign_up.xml
index 39198dc..a3d29f4 100644
--- a/app/src/main/res/layout/activity_sign_up.xml
+++ b/app/src/main/res/layout/activity_sign_up.xml
@@ -1,49 +1,38 @@
 <?xml version="1.0" encoding="utf-8"?>
-<layout xmlns:android="http://schemas.android.com/apk/res/android"
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools">
-
-    <data>
-        <variable
-            name="viewModel"
-            type="com.example.recipeapp.viewmodels.SignUpViewModel" />
-    </data>
-    <androidx.constraintlayout.widget.ConstraintLayout
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context=".LoginActivity">
+    <EditText
         android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        tools:context=".LoginActivity">
-        <EditText
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            app:layout_constraintTop_toTopOf="parent"
-            android:id="@+id/etLogin"
-            android:inputType="text"
-            android:layout_marginStart="20dp"
-            android:layout_marginEnd="20dp"
-            android:text="@={viewModel.username}"
-            />
+        android:layout_height="wrap_content"
+        app:layout_constraintTop_toTopOf="parent"
+        android:id="@+id/etLogin"
+        android:inputType="text"
+        android:layout_marginStart="20dp"
+        android:layout_marginEnd="20dp"
+        />
 
-        <EditText
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            app:layout_constraintTop_toBottomOf="@+id/etLogin"
-            android:id="@+id/etPass"
-            android:inputType="textPassword"
-            android:layout_marginStart="20dp"
-            android:layout_marginEnd="20dp"
-            android:text="@={viewModel.password}"
-            />
-        <androidx.appcompat.widget.AppCompatButton
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginStart="20dp"
-            android:layout_marginEnd="20dp"
-            android:id="@+id/btnSignUp"
-            app:layout_constraintTop_toBottomOf="@+id/etPass"
-            android:text="@string/sign_up"
-            android:background="@color/blue"
-            android:onClick="@{() -> viewModel.signUp()}"
-            />
+    <EditText
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        app:layout_constraintTop_toBottomOf="@+id/etLogin"
+        android:id="@+id/etPass"
+        android:inputType="textPassword"
+        android:layout_marginStart="20dp"
+        android:layout_marginEnd="20dp"
+        />
+    <androidx.appcompat.widget.AppCompatButton
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="20dp"
+        android:layout_marginEnd="20dp"
+        android:id="@+id/btnSignUp"
+        app:layout_constraintTop_toBottomOf="@+id/etPass"
+        android:text="@string/sign_up"
+        android:background="@color/blue"
+        />
 
-    </androidx.constraintlayout.widget.ConstraintLayout>
-</layout>
\ No newline at end of file
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
diff --git a/app/src/main/res/layout/interactions.xml b/app/src/main/res/layout/interactions.xml
index b0465c7..a1a98a1 100644
--- a/app/src/main/res/layout/interactions.xml
+++ b/app/src/main/res/layout/interactions.xml
@@ -2,10 +2,7 @@
 <androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:app="http://schemas.android.com/apk/res-auto"
     android:orientation="vertical"
-    android:layout_width="wrap_content"
-    app:layout_constraintEnd_toEndOf="parent"
-    app:layout_constraintTop_toTopOf="parent"
-    app:layout_constraintBottom_toBottomOf="parent"
+    android:layout_width="match_parent"
     android:layout_height="wrap_content">
     <ImageView
         android:layout_width="@dimen/interaction_icon"
@@ -35,17 +32,6 @@
         android:id="@+id/share"
         app:layout_constraintStart_toStartOf="parent"
         app:layout_constraintTop_toBottomOf="@id/bookmark"
-        app:layout_constraintBottom_toBottomOf="@id/review"
-        />
-    <ImageView
-        android:layout_width="@dimen/interaction_icon"
-        android:layout_height="@dimen/interaction_icon"
-        android:src="@drawable/ic_baseline_message_24"
-        android:layout_margin="3dp"
-        android:id="@+id/review"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toBottomOf="@id/share"
         app:layout_constraintBottom_toBottomOf="parent"
         />
-
 </androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
diff --git a/app/src/main/res/layout/item_list.xml b/app/src/main/res/layout/item_list.xml
index af418ec..a6081a5 100644
--- a/app/src/main/res/layout/item_list.xml
+++ b/app/src/main/res/layout/item_list.xml
@@ -1,36 +1,28 @@
 <?xml version="1.0" encoding="utf-8"?>
-<layout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools">
+<androidx.constraintlayout.widget.ConstraintLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="wrap_content"
+    android:layout_height="wrap_content"
+    tools:context=".MainActivity"
+    android:paddingStart="13dp"
+    android:paddingEnd="12dp"
+    android:background="@drawable/stroke_square"
+    android:paddingTop="5dp"
+    android:paddingBottom="3dp"
+    android:layout_margin="3dp"
+    android:id="@+id/layout"
+    >
 
-    <data>
-        <variable
-            name="itemViewModel"
-            type="com.example.recipeapp.viewmodels.StepViewModel" />
-    </data>
-    <androidx.constraintlayout.widget.ConstraintLayout
-        xmlns:app="http://schemas.android.com/apk/res-auto"
+    <TextView
+        android:id="@+id/text"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
-        tools:context=".MainActivity"
-        android:paddingStart="13dp"
-        android:paddingEnd="12dp"
-        android:background="@drawable/stroke_square"
-        android:paddingTop="5dp"
-        android:paddingBottom="3dp"
-        android:layout_margin="3dp"
-        android:id="@+id/layout"
-        >
+        android:text="Hello World!"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintLeft_toLeftOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
+        />
 
-        <TextView
-            android:id="@+id/text"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            tools:text="Hello World!"
-            android:text="@{itemViewModel.step}"
-            app:layout_constraintBottom_toBottomOf="parent"
-            app:layout_constraintLeft_toLeftOf="parent"
-            app:layout_constraintTop_toTopOf="parent"
-            />
-
-    </androidx.constraintlayout.widget.ConstraintLayout>
-</layout>
\ No newline at end of file
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
diff --git a/app/src/main/res/menu/menu_main.xml b/app/src/main/res/menu/menu_main.xml
index dc80223..d8b4393 100644
--- a/app/src/main/res/menu/menu_main.xml
+++ b/app/src/main/res/menu/menu_main.xml
@@ -8,6 +8,11 @@
         android:icon="@drawable/ic_logout"
         android:title="@string/logout"
         android:iconTint="@color/white"
-        app:showAsAction="always" />
-
+        app:showAsAction="ifRoom" />
+    <item
+        android:id="@+id/bookmark"
+        android:icon="@drawable/ic_baseline_bookmark_24"
+        android:title="@string/bookmarks"
+        android:iconTint="@color/white"
+        app:showAsAction="ifRoom" />
 </menu>
\ No newline at end of file
diff --git a/app/src/main/res/values/dimens.xml b/app/src/main/res/values/dimens.xml
index 3fedacc..f12126a 100644
--- a/app/src/main/res/values/dimens.xml
+++ b/app/src/main/res/values/dimens.xml
@@ -1,4 +1,4 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <dimen name="interaction_icon">40dp</dimen>
+    <dimen name="interaction_icon">25dp</dimen>
 </resources>
\ No newline at end of file
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
index a42b09e..c2a0e37 100644
--- a/app/src/main/res/values/strings.xml
+++ b/app/src/main/res/values/strings.xml
@@ -18,10 +18,10 @@
     <string name="instructions">Instructions:</string>
     <string name="Liked">Liked</string>
     <string name="login_issue">Issue with login</string>
-    <string name="login_failure">Unable to login: %1$s</string>
-    <string name="unknown_error">Unknown error</string>
-    <string name="invalid_credentials">Invalid credentials</string>
     <string name="liked">Liked</string>
+    <string name="recipe_bookmarked">Recipe bookmarked</string>
+    <string name="recipe_unbookmarked">Recipe no longer bookmarked</string>
+    <string name="bookmarks">bookmarks</string>
     <string name="try_recipe">Try %1$s!</string>
     <string-array name="cuisines">
         <item></item>
